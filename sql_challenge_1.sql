
-- Create Table CARS from the steel data
CREATE TABLE cars (
car_id INT PRIMARY KEY,
make VARCHAR(50),
type VARCHAR(50),
style VARCHAR(50),
cost_$ INT
);

-- Insert data into the table CARS 
INSERT INTO cars (car_id, make, type, style, cost_$)
VALUES (1, 'Honda', 'Civic', 'Sedan', 30000),
(2, 'Toyota', 'Corolla', 'Hatchback', 25000),
(3, 'Ford', 'Explorer', 'SUV', 40000),
(4, 'Chevrolet', 'Camaro', 'Coupe', 36000),
(5, 'BMW', 'X5', 'SUV', 55000),
(6, 'Audi', 'A4', 'Sedan', 48000),
(7, 'Mercedes', 'C-Class', 'Coupe', 60000),
(8, 'Nissan', 'Altima', 'Sedan', 26000);

-- Create Table Salesperson from the steel data
CREATE TABLE salespersons (
salesman_id INT PRIMARY KEY,
name VARCHAR(50),
age INT,
city VARCHAR(50)
);

-- Insert data into the table Salesperson 
INSERT INTO salespersons (salesman_id, name, age, city)
VALUES (1, 'John Smith', 28, 'New York'),
(2, 'Emily Wong', 35, 'San Fran'),
(3, 'Tom Lee', 42, 'Seattle'),
(4, 'Lucy Chen', 31, 'LA');

-- Create Table Sales from the Steel data
CREATE TABLE sales (
sale_id INT PRIMARY KEY,
car_id INT,
salesman_id INT,
purchase_date DATE,
FOREIGN KEY (car_id) REFERENCES cars(car_id),
FOREIGN KEY (salesman_id) REFERENCES salespersons(salesman_id)
);

-- Insert data into the table Sales 
INSERT INTO sales (sale_id, car_id, salesman_id, purchase_date)
VALUES (1, 1, 1, '2021-01-01'),
(2, 3, 3, '2021-02-03'),
(3, 2, 2, '2021-02-10'),
(4, 5, 4, '2021-03-01'),
(5, 8, 1, '2021-04-02'),
(6, 2, 1, '2021-05-05'),
(7, 4, 2, '2021-06-07'),
(8, 5, 3, '2021-07-09'),
(9, 2, 4, '2022-01-01'),
(10, 1, 3, '2022-02-03'),
(11, 8, 2, '2022-02-10'),
(12, 7, 2, '2022-03-01'),
(13, 5, 3, '2022-04-02'),
(14, 3, 1, '2022-05-05'),
(15, 5, 4, '2022-06-07'),
(16, 1, 2, '2022-07-09'),
(17, 2, 3, '2023-01-01'),
(18, 6, 3, '2023-02-03'),
(19, 7, 1, '2023-02-10'),
(20, 4, 4, '2023-03-01');

-- DETAILS OF THE CARS PURCHASED IN THE YEAR 2022
SELECT  s.car_id, YEAR(s.purchase_date) AS year,c.make,c.type,c.style,c.cost_$
FROM cars c
JOIN sales s
ON c.car_id=s.car_id 
WHERE YEAR(s.purchase_date)=2022;

-- NUMBER OF CARS SOLD BY EACH SALESPERSON
SELECT  sp.name,sp.salesman_id,count(s.salesman_id) as no_of_cars_sold
FROM sales s
JOIN salespersons sp
ON sp.salesman_id=s.salesman_id
GROUP BY sp.salesman_id,sp.name
ORDER BY sp.salesman_id;

-- REVENUE GENERATED BY EACH SALESPERSON
SELECT sp.salesman_id,sp.name,sum(c.cost_$) as revenue
FROM sales s
JOIN salespersons sp
ON s.salesman_id = sp.salesman_id
JOIN cars c
ON s.car_id = c.car_id
GROUP BY s.salesman_id
ORDER BY revenue;

-- DETAILS OF THE CARS SOLD BY EACH SALEPERSON
SELECT sp.name,C.STYLE,C.MAKE,C.TYPE
FROM sales s
JOIN salespersons sp
ON s.salesman_id=sp.salesman_id
JOIN cars c
ON c.car_id=s.car_id
GROUP BY sp.name, C.STYLE,C.MAKE,C.TYPE;


-- REVENUE GENERATED BY EACH TYPE
SELECT c.type,sum(c.cost_$) AS revenue,c.car_id
FROM sales s
JOIN cars c
ON s.car_id=c.car_id
GROUP BY s.car_id;

-- CAR DETAILS SOLD BY EMILY WONG IN THE YEAR 2021
SELECT sp.name,s.purchase_date,c.type,c.make,c.style,c.cost_$
FROM sales s
JOIN salespersons sp
ON s.salesman_id=sp.salesman_id
JOIN cars c
ON c.car_id=s.car_id
WHERE name LIKE 'Emily Wong' AND YEAR(purchase_date)=2021;

-- REVENUE GENERATED BY HATCHBACK CARS 
SELECT c.style, sum(c.cost_$) AS revenue
FROM sales s
JOIN cars c
ON s.car_id=c.car_id
WHERE style LIKE 'Hatchback'
GROUP BY c.style;

-- REVENUE GENERATED BY SUV CARS IN THE YEAR 2022
SELECT c.style,sum(c.cost_$) as revenue
FROM sales s
JOIN cars c
ON s.car_id=c.car_id
WHERE style LIKE 'SUV' AND YEAR(purchase_date)=2022
GROUP BY c.style;

-- PERSON WHO SOLD MOST OF THE CARS IN THE YEAR 2023
SELECT sp.name,sp.city,count(s.salesman_id) AS cars_sold
FROM sales s
JOIN salespersons sp
ON s.salesman_id=sp.salesman_id
WHERE YEAR(s.purchase_date) = '2023'
GROUP BY s.salesman_id, sp.name
ORDER BY cars_sold desc
LIMIT 1;

-- Highgest revenue generated by Employee? 
SELECT sp.name,sp.age,sum(c.cost_$) AS revenue
FROM sales s
JOIN salespersons sp
ON s.salesman_id=sp.salesman_id
JOIN cars c
ON c.car_id = s.car_id
WHERE YEAR(s.purchase_date) = '2022'
GROUP BY s.salesman_id, sp.name
ORDER BY revenue desc
LIMIT 1















